---
import type { GetStaticPaths } from "astro";

type PostData = {
	title: string;
	published: Date;
	draft: boolean;
	description: string;
	image: string;
	tags: string[];
	category: string;
	lang: string;
	prevTitle: string;
	prevSlug: string;
	pinned?: boolean; // Added 'pinned' property
};

import PostPage from "../components/PostPage.astro";
import Pagination from "../components/control/Pagination.astro";
import { PAGE_SIZE } from "../constants/constants";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { getSortedPosts } from "../utils/content-utils";

export const getStaticPaths = (async ({ paginate }) => {
	const allBlogPosts = await getSortedPosts();

	// Sort posts so pinned posts are first, and each group is sorted by date
	const sortedWithPinnedFirst = allBlogPosts.sort((a, b) => {
		const aPinned = ((a.data as PostData).pinned ?? false) ? 1 : 0;
		const bPinned = ((b.data as PostData).pinned ?? false) ? 1 : 0;

		// Pinned posts first
		if (aPinned !== bPinned) {
			return bPinned - aPinned;
		}

		// Then sort by date descending
		const dateA = new Date(a.data.published);
		const dateB = new Date(b.data.published);
		return dateB.getTime() - dateA.getTime();
	});

	return paginate(sortedWithPinnedFirst, { pageSize: PAGE_SIZE });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const len = page.data.length;
---

<MainGridLayout>
	<PostPage page={page} />
	<Pagination
		class="mx-auto onload-animation"
		page={page}
		style={`animation-delay: calc(var(--content-delay) + ${len * 50}ms)`}
	/>
</MainGridLayout>
